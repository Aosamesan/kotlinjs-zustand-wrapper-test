kotlin version: 2.0.20
error message: java.lang.OutOfMemoryError: GC overhead limit exceeded
	at java.base/java.util.Collections.singletonIterator(Collections.java:5027)
	at java.base/java.util.Collections$SingletonList.iterator(Collections.java:5170)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder.setOverriddenSymbols(IrFakeOverrideBuilder.kt:504)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder.createAndBindFakeOverride(IrFakeOverrideBuilder.kt:362)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder.createAndBindFakeOverrides(IrFakeOverrideBuilder.kt:258)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder.generateOverridesInFunctionGroup(IrFakeOverrideBuilder.kt:186)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder.buildFakeOverridesForClassImpl(IrFakeOverrideBuilder.kt:113)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder.buildFakeOverridesForClass$lambda$8(IrFakeOverrideBuilder.kt:70)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder$$Lambda/0x00000008007077c8.invoke(Unknown Source)
	at org.jetbrains.kotlin.backend.common.serialization.signature.PublicIdSignatureComputer.inFile(IdSignatureFactory.kt:40)
	at org.jetbrains.kotlin.backend.common.serialization.signature.IdSignatureFactory.inFile(IdSignatureFactory.kt:211)
	at org.jetbrains.kotlin.backend.common.serialization.DeclarationTable.inFile(DeclarationTable.kt:62)
	at org.jetbrains.kotlin.backend.common.overrides.IrLinkerFakeOverrideBuilderStrategy.inFile(FakeOverrides.kt:91)
	at org.jetbrains.kotlin.ir.overrides.IrFakeOverrideBuilder.buildFakeOverridesForClass(IrFakeOverrideBuilder.kt:66)
	at org.jetbrains.kotlin.backend.common.overrides.IrLinkerFakeOverrideProvider.buildFakeOverrideChainsForClass(FakeOverrides.kt:296)
	at org.jetbrains.kotlin.backend.common.overrides.IrLinkerFakeOverrideProvider.provideFakeOverrides(FakeOverrides.kt:302)
	at org.jetbrains.kotlin.backend.common.overrides.IrLinkerFakeOverrideProvider.provideFakeOverrides(FakeOverrides.kt:310)
	at org.jetbrains.kotlin.backend.common.serialization.KotlinIrLinker.postProcess(KotlinIrLinker.kt:218)
	at org.jetbrains.kotlin.ir.backend.js.ic.LoadedJsIr.loadUnboundSymbols(JsIrLinkerLoader.kt:81)
	at org.jetbrains.kotlin.ir.backend.js.ic.JsIrLinkerLoader.loadIr(JsIrLinkerLoader.kt:247)
	at org.jetbrains.kotlin.ir.backend.js.ic.JsIrLinkerLoader.loadIr$default(JsIrLinkerLoader.kt:191)
	at org.jetbrains.kotlin.ir.backend.js.ic.CacheUpdater.loadIrForDirtyFilesAndInitCompiler(CacheUpdater.kt:738)
	at org.jetbrains.kotlin.ir.backend.js.ic.CacheUpdater.loadIrAndMakeIrFragmentGenerators(CacheUpdater.kt:769)
	at org.jetbrains.kotlin.ir.backend.js.ic.CacheUpdater.actualizeCaches(CacheUpdater.kt:805)
	at org.jetbrains.kotlin.cli.js.K2JsIrCompiler.prepareIcCaches(K2JsIrCompiler.kt:727)
	at org.jetbrains.kotlin.cli.js.K2JsIrCompiler.doExecute(K2JsIrCompiler.kt:310)
	at org.jetbrains.kotlin.cli.js.K2JSCompiler.doExecute(K2JSCompiler.java:70)
	at org.jetbrains.kotlin.cli.js.K2JSCompiler.doExecute(K2JSCompiler.java:33)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:103)
	at org.jetbrains.kotlin.cli.common.CLICompiler.execImpl(CLICompiler.kt:49)
	at org.jetbrains.kotlin.cli.common.CLITool.exec(CLITool.kt:101)
	at org.jetbrains.kotlin.daemon.CompileServiceImpl.compile(CompileServiceImpl.kt:1555)


